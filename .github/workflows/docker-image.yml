name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest
    environment: dailyreport

    steps:
    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sudahdigital
        CONSUL_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN }}
        AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        IMAGE_TAG: dailyreport
      run: |
        docker build --build-arg CONSUL_TOKEN=${{ secrets.CONSUL_HTTP_TOKEN }} --build-arg AWS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }} --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -t sudahdigital .
        docker tag sudahdigital $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG}
        
    - name: Execute command on remote server
      env:
         IP: $(aws --region ap-southeast-1 ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=instance-id,Values=i-00d506ac6bfb8d477" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text)
         CONSUL_TOKEN: ${{ secrets.CONSUL_HTTP_TOKEN }}
      run: |
         sshpass -p "${{secrets.SSH_PASSWORD}}" ssh -o StrictHostKeyChecking=no root@${{env.IP}} 'curl -s --header "X-Consul-Token:${{env.CONSUL_TOKEN}}" -XGET https://consul.sudahdigital.com/v1/kv/daily_report/deploy_dailyreport.sh?raw=true | tee ~/deploy_dailyreport.sh'
         sshpass -p "${{secrets.SSH_PASSWORD}}" ssh -o StrictHostKeyChecking=no root@${{env.IP}} 'sh ~/deploy_dailyreport.sh'